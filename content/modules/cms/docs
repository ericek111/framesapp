MySQL:
  Tables:
    users:
      Query: 
        CREATE TABLE IF NOT EXISTS `posts` (
          `id` int NOT NULL AUTO_INCREMENT,
          `author` int NOT NULL,
          `category` int NOT NULL,
          `title` text NOT NULL,
          `permalink` text NOT NULL,
          `content` text NOT NULL,
          `status` smallint NOT NULL,
          `planned` timestamp NOT NULL,
          `created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
          PRIMARY KEY `id` (`id`)
        ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_slovak_ci;
      Insert: INSERT INTO `posts` (`id`, `author`, `category`, `title`, `permalink`, `content`, `status`, `created`) VALUES ('', '27', '3', 'Frames App released!', 'frames-app-released', 'Frames App was released for public testing!', '1', CURRENT_TIMESTAMP);
      Columns:
        id:
          Type: int NOT NULL AUTO_INCREMENT
          Description: ID of post.
        author:
          Type: int NOT NULL
          Description: ID of post author.
        title:
          Type: text NOT NULL
          Description: Title of post.
        category:
          Type: int NOT NULL,
          Description: ID of category, where should be post.
        permalink:
          Type: text NOT NULL
          Description: Title of post in URL-friendly form (e. g. frames-app-released)
        content:
          Type: text NOT NULL
          Description: Content (text) of post.
        status:
          Type: smallint
          Description: Status of post (planned, released, concept, etc.).
            0: Unknown
            1: Concept
            2: Waiting for approval
            3: Released
            4: Planned
            5: Only for Admins
            6: Deleted
        planned:
          Type: timestamp NOT NULL
          Description: Used only for planned posts. Time, when will be planned post released
        created:
          Type: timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP
          Description: Original post creation date.
posts.php:
  Actions:
  	register:
  	  Description: Registers new user.
  	  method: POST,
  	  Input (array):
  	  	username: [username]
  	  	email: [email]
  	  	password: [non-hashed password]
  	  	data [json string of userdata]
  	  Output (integer/string):
  	  	0: Arguments (username | email | password | data) missing.
  	  	1: Username or email already exists!
  	  	2: Invalid e-mail!
  	  	3: Invalid username!
  	  	4: User successfully created!
  	  	5: No rows changed - MySQL query failed.
        6: E-mail sending failed!
  	  	Other: mostly error.
  Functions:
  	validate_username()
  	  Description: Validates username.
  	  Input (string):
  	  	$username = Username, which are going to be validated.
  	  Output (string):
  	  	"invalid username": Username is not valid!
  	  	Other: Validated username.
  	validate_email()
  	  Description: Validated e-mail.
  	  Input:
  	  	$email - E-mail, which are going to be validated.
  	  Output (string):
  	  	validated e-mail
  	check_userid_value()
  	  Description: Checks, if is input value e-mail, user ID or username.
  	  Input (string):
  	  	$id = E-mail/password/user ID.
  	  Output (string):
  	  	"email": Input value is e-mail.
  	  	"username": Input valuse is username.
  	  	"id": Input valuse is user ID.
  	user_exists()
  	  Description: Checks, if user exists.
  	  Input (string):
  	  	$username / $email / $id = Checks, if user exists using output from check_userid_value().
  	  Output (boolean):
  	  	true: User exists.
  	  	false: User doesn't exists.
  	get_user()
  	  Description: Outputs MySQL row from users table with user info.
  	  Input (string / integer):
  	  	$username / $email / $id = Username / email / user ID - check_userid_value().
  	  Output (MySQL result):
  	  	$result: Result of MySQL query (SELECT * FROM users WHERE check_userid_value($input)=$input)
  	get_users()
  	  Description: Returns all users in users table.
  	  Output (MySQL result):
  	  	$result = Result of MySQL query (SELECT * FROM users)
  	getrank()
  	  Description: Converts numeric level of user rank to string and vice versa.
  	  Output (string / integer) or input:
  	  	0: Visitor
  	  	1: Waiting
  	  	2: Registered
  	  	3: Moderator
  	  	4: Editor
  	  	5: Redactor
  	  	6: Master
  	  	7: Administrator
  	  	8: Owner
  	get_userdata()
  	  Description: Outputs user data from column "data" in user's row in MySQL users table.
  	  Input: 
  	  	$username / $email / $id = Username / email / user ID - check_userid_value().
  	  Output (JSON):
  	  	$userdata = JSON string:
  	  	  {
  	  	  	"firstname": [first name],
  	  	  	"lastname": [last name],
  	  	  	"city": [city]
  	  	  }
  	  	  Example: {"firstname":"Erik","lastname":"Bro\u010dko","city":"Trnava"}
  	check_userid_value()
  	  Description:
  	  Input:
  	  Output: